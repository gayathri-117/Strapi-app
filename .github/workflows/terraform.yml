name: Terraform Deploy (manual)

on:
  workflow_dispatch:
    inputs:
      image_full:
        description: 'Full ECR image (e.g. 123456789012.dkr.ecr.us-east-1.amazonaws.com/myrepo:tag)'
        required: true

jobs:
  terraform:
    name: Terraform apply
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_INPUT: "false"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.6.0'

      # ---- SAFE SSH KEY HANDLING ----
      - name: Write SSH key to file and export TF_VAR path
        run: |
          # write secret multiline PEM to a file
          printf '%s\n' "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa
          # export the path as TF_VAR_ so terraform picks it up as var.ssh_private_key
          echo "TF_VAR_ssh_private_key=$(pwd)/id_rsa" >> $GITHUB_ENV
          # export other single-line TF vars
          echo "TF_VAR_aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_aws_region=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
        shell: bash

           - name: Terraform init
        working-directory: ./terraform
        run: terraform init -input=false

      - name: Terraform fmt & validate
        working-directory: ./terraform
        run: terraform fmt && terraform validate

      - name: Terraform plan
        id: plan
        working-directory: ./terraform
        run: |
          terraform plan -input=false -var="image_full=${{ github.event.inputs.image_full }}" -out=tfplan

      - name: Show plan (optional)
        working-directory: ./terraform
        run: terraform show -no-color tfplan

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Cleanup TF plan file
        if: always()
        working-directory: ./terraform
        run: rm -f tfplan


      - name: Clean up SSH key file
        if: always()
        run: |
          rm -f id_rsa
