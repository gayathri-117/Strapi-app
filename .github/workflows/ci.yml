name: CI - Build & Push to ECR

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          set -e
          aws ecr describe-repositories --repository-names "${{ env.ECR_REPOSITORY }}" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "${{ env.ECR_REPOSITORY }}"

      - name: Login to Amazon ECR (masked)
        run: |
          PW=$(aws ecr get-login-password --region ${{ env.AWS_REGION }})
          echo "::add-mask::$PW"
          echo "$PW" | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and push Docker image
        id: build_push
        uses: docker/build-push-action@v4
        with:
          context: ./my-strapi-project
          file: ./my-strapi-project/Dockerfile
          push: true
          tags: |
            ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
            ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Set image output
        id: set_image
        run: |
          IMAGE=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "Pushed image: ${IMAGE}"

      - name: Done
        run: |
          echo "CI finished. Image: ${{ steps.set_image.outputs.image }}"
